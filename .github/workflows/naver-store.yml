name: '@vircle/naver-store'
on:
    push:
        branches:
            - dev
            - main
            - stage
        paths:
            - 'packages/naver-store/**'
            - '.github/workflows/naver-store.yml'

    pull_request:
        branches:
            - dev
        paths:
            - 'packages/naver-store/**'

jobs:
    build_type_test:
        if: ${{ github.event_name == 'pull_request' }}
        runs-on: ubuntu-22.04
        defaults:
            run:
                shell: bash
                working-directory: ./packages/naver-store
        steps:
            - name: git Checkout
              uses: actions/checkout@v3

            - name: node 환경 설정
              uses: actions/setup-node@v3
              with:
                  node-version: 19

            - name: 의존성 체크
              run: yarn

            - name: entity 프로젝트 빌드하기
              run: yarn workspace @vircle/entity build

            - name: build 하기
              run: yarn build

            - name: bundle 하기
              run: yarn bundle

    deploy_on_dev:
        if: ${{ github.ref_name == 'dev' && github.event_name == 'push' }}
        runs-on: ubuntu-22.04
        defaults:
            run:
                shell: bash
                working-directory: ./packages/naver-store
        steps:
            - name: git Checkout
              uses: actions/checkout@v3

            - name: node 환경 설정
              uses: actions/setup-node@v3
              with:
                  node-version: 19

            - name: aws 세팅
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ap-northeast-2

            - name: 개발 서버에 배포 (aws ssm send-command)
              run: |
                  aws ssm send-command \
                    --document-name "AWS-RunShellScript" \
                    --targets '[{"Key":"InstanceIds","Values":["i-0234a0bcb3f2ab70d"]}]' \
                    --parameters '{"commands":[ "#!/bin/bash","cd /root/vircle/packages/naver-store", "bash /root/vircle/packages/naver-store/script/start.dev.sh"]}'

    # deploy_on_prod:
    #     if: ${{ github.ref_name == 'main' && github.event_name == 'push'  }}
    #     runs-on: ubuntu-22.04
    #     defaults:
    #         run:
    #             shell: bash
    #             working-directory: ./packages/naver-store
    #     steps:
    #         - name: git Checkout
    #           uses: actions/checkout@v3

    #         - name: node 환경 설정
    #           uses: actions/setup-node@v3
    #           with:
    #               node-version: 19

    #         - name: 의존성 체크
    #           run: yarn

    #         - name: build 하기
    #           run: yarn build

    #         - name: bundle 하기
    #           run: yarn bundle:prod

    #         - name: copy appspec & shell files
    #           run: |
    #               cp appspec.yml bundle/appspec.yml
    #               cp -r script/deploy_prod bundle/script

    #         - name: aws 세팅
    #           uses: aws-actions/configure-aws-credentials@v1
    #           with:
    #               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #               aws-region: ap-northeast-2

    #         - name: aws s3 업로드
    #           run: |
    #               aws deploy push \
    #                 --application-name vircle \
    #                 --description "git hash ${{ github.sha }}" \
    #                 --no-ignore-hidden-files \
    #                 --s3-location s3://deploy.vircle/naver-store/prod.zip \
    #                 --source ./bundle

    #         - name: aws codedeploy create-deployment
    #           run: |
    #               aws deploy create-deployment \
    #                 --application-name vircle \
    #                 --deployment-config-name CodeDeployDefault.OneAtATime \
    #                 --deployment-group-name vircle-prod-naver-store-DG \
    #                 --s3-location bucket=deploy.vircle,bundleType=zip,key=naver-store/prod.zip \
    #                 --file-exists-behavior=OVERWRITE
    # deploy_on_stage:
    #     if: ${{ github.ref_name == 'stage' && github.event_name == 'push'  }}
    #     runs-on: ubuntu-22.04
    #     defaults:
    #         run:
    #             shell: bash
    #             working-directory: ./packages/naver-store
    #     steps:
    #         - name: git Checkout
    #           uses: actions/checkout@v3

    #         - name: node 환경 설정
    #           uses: actions/setup-node@v3
    #           with:
    #               node-version: 19

    #         - name: 의존성 체크
    #           run: yarn

    #         - name: build 하기
    #           run: yarn build

    #         - name: bundle 하기
    #           run: yarn bundle:prod

    #         - name: copy appspec & shell files
    #           run: |
    #               cp appspec.yml bundle/appspec.yml
    #               cp -r script/deploy_stage bundle/script

    #         - name: aws 세팅
    #           uses: aws-actions/configure-aws-credentials@v1
    #           with:
    #               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #               aws-region: ap-northeast-2

    #         - name: aws s3 업로드
    #           run: |
    #               aws deploy push \
    #                 --application-name vircle \
    #                 --description "git hash ${{ github.sha }}" \
    #                 --no-ignore-hidden-files \
    #                 --s3-location s3://deploy.vircle/naver-store/stage.zip \
    #                 --source ./bundle

    #         - name: aws codedeploy create-deployment
    #           run: |
    #               aws deploy create-deployment \
    #                 --application-name vircle \
    #                 --deployment-config-name CodeDeployDefault.OneAtATime \
    #                 --deployment-group-name vircle-stage-naver-store-DG \
    #                 --s3-location bucket=deploy.vircle,bundleType=zip,key=naver-store/stage.zip \
    #                 --file-exists-behavior=OVERWRITE
